const fs = require('fs');
const path = require('path');

const photosDir = '/Users/dmitryrudenkov/repos/Pitomnik_Myta/–ö–∞—Ç–∞–ª–æ–≥ —Ä–∞—Å—Ç–µ–Ω–∏–π —Ñ–æ—Ç–æ';
const assetsDir = '/Users/dmitryrudenkov/repos/Pitomnik_Myta/frontend/assets/plants';
const plantsDataPath = '/Users/dmitryrudenkov/repos/Pitomnik_Myta/data/plants.json';

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ä–∞—Å—Ç–µ–Ω–∏–π
if (!fs.existsSync(assetsDir)) {
    fs.mkdirSync(assetsDir, { recursive: true });
}

// –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–∞—Å—Ç–µ–Ω–∏—è—Ö
const plantsData = JSON.parse(fs.readFileSync(plantsDataPath, 'utf8'));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
function createSafeFileName(name) {
    return name
        .replace(/[^a-zA-Z0-9–∞-—è–ê-–Ø\s-]/g, '') // –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã
        .replace(/\s+/g, '-') // –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –¥–µ—Ñ–∏—Å—ã
        .toLowerCase();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞–ø–∫–∏ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è
function findPlantPhotoFolder(plantName) {
    const photoFolders = fs.readdirSync(photosDir);
    
    // –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    let exactMatch = photoFolders.find(folder => folder === plantName);
    if (exactMatch) {
        return exactMatch;
    }
    
    // –ò—â–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    let partialMatch = photoFolders.find(folder => {
        const folderName = folder.toLowerCase();
        const plantNameLower = plantName.toLowerCase();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–∞—Å—Ç–µ–Ω–∏—è
        const plantWords = plantNameLower.split(/\s+/);
        return plantWords.some(word => word.length > 3 && folderName.includes(word));
    });
    
    return partialMatch;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
function copyPlantPhotos() {
    let copiedCount = 0;
    let notFoundCount = 0;
    const notFound = [];
    
    console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ä–∞—Å—Ç–µ–Ω–∏–π...\n');
    
    plantsData.forEach((plant, index) => {
        const plantName = plant.name;
        const photoFolder = findPlantPhotoFolder(plantName);
        
        if (photoFolder) {
            const sourceFolder = path.join(photosDir, photoFolder);
            const photos = fs.readdirSync(sourceFolder);
            
            // –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            const photoFile = photos.find(file => 
                /\.(jpg|jpeg|png|webp)$/i.test(file)
            );
            
            if (photoFile) {
                const sourcePath = path.join(sourceFolder, photoFile);
                const safeFileName = createSafeFileName(plantName);
                const extension = path.extname(photoFile);
                const targetFileName = `${safeFileName}${extension}`;
                const targetPath = path.join(assetsDir, targetFileName);
                
                try {
                    fs.copyFileSync(sourcePath, targetPath);
                    console.log(`‚úÖ ${index + 1}. ${plantName} -> ${targetFileName}`);
                    copiedCount++;
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è
                    plant.image_url = `assets/plants/${targetFileName}`;
                } catch (error) {
                    console.log(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è ${plantName}: ${error.message}`);
                }
            } else {
                console.log(`‚ö†Ô∏è  ${index + 1}. ${plantName} - –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ`);
                notFoundCount++;
                notFound.push(plantName);
            }
        } else {
            console.log(`‚ùå ${index + 1}. ${plantName} - –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
            notFoundCount++;
            notFound.push(plantName);
        }
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    fs.writeFileSync(plantsDataPath, JSON.stringify(plantsData, null, 2));
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:`);
    console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: ${copiedCount}`);
    console.log(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ: ${notFoundCount}`);
    
    if (notFound.length > 0) {
        console.log(`\n‚ùå –†–∞—Å—Ç–µ–Ω–∏—è –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:`);
        notFound.forEach(name => console.log(`   - ${name}`));
    }
    
    console.log(`\nüéâ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
copyPlantPhotos();
